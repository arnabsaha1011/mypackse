# create table issue

CREATE TABLE ISSUE(
ISSUE_ID VARCHAR(20) NOT NULL,
ISSUE_NAME VARCHAR(500) NOT NULL,
ISSUE_CREATION_TIME VARCHAR(100),
ISSUE_ACTION_PERFORMED VARCHAR(100),
ISSUE_USER_NAME VARCHAR(100),
PRIMARY KEY ( ISSUE_ID )
);

# create table milestone
CREATE TABLE MILESTONE(
MILESTONE_ID VARCHAR(20) NOT NULL,
MILESTONE_NAME VARCHAR(500),
MILESTONE_DESC VARCHAR(1000),
MILESTONE_CREATION_TIME VARCHAR(100),
MILESTONE_DUE_TIME VARCHAR(100),
MILESTONE_CLOSED_TIME VARCHAR(100),
MILESTONE_USER_NAME VARCHAR(100),
PRIMARY KEY ( MILESTONE_ID )
);

# create table comment
CREATE TABLE COMMENT(
COMMENT_ISSUE_URL VARCHAR(100),
COMMENT_ID VARCHAR(20) NOT NULL,
COMMENT_USER_NAME VARCHAR(20),
COMMENT_USER_ID VARCHAR(20),
COMMENT_CREATE_TIME TIMESTAMP,
COMMENT_UPDATE_TIME TIMESTAMP,
COMMENT_DESC VARCHAR(1000),
PRIMARY KEY ( COMMENT_ID )
);

# create table user
CREATE TABLE USER(
USER_ID VARCHAR(20),
USER_NAME VARCHAR(20),
USER_GROUP_NUMBER INT,
PRIMARY KEY ( USER_ID )
);

#insert queries
#comment
INSERT INTO COMMENT(COMMENT_ISSUE_URL,COMMENT_ID,COMMENT_USER_NAME,COMMENT_USER_ID,COMMENT_CREATE_TIME,COMMENT_UPDATE_TIME,COMMENT_DESC) values (
);

# create table commit
CREATE TABLE COMMIT(
COMMIT_ID VARCHAR(100) NOT NULL,
COMMIT_USER_ID VARCHAR(20),
COMMIT_USER_NAME VARCHAR(100),
COMMIT_TIMESTAMP TIMESTAMP,
COMMIT_DESC VARCHAR(1000),
PRIMARY KEY ( COMMIT_ID )
);

#insert queries
#commit
INSERT INTO COMMIT(
COMMIT_ID,
COMMIT_USER_ID,
COMMIT_USER_NAME,
COMMIT_TIMESTAMP,
COMMIT_DESC) values (
);

